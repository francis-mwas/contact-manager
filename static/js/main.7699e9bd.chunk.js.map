{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContacts.js","components/contacts/EditContacts.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","react_router_dom","to","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showInfo","handleClick","e","handleDelete","delete","_this2","_this$props$contacts","name","email","phone","onClick","style","cursor","color","float","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContacts","errors","handleSubmit","_this$state","newContact","response","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","onSubmit","bind","layout_TextInputGroup","EditContacts","updateContact","match","params","put","About","NotFound","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7699e9bd.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\n\n\nconst Header = (props)=> {\n\n    const { branding } = props;\n\n    return (\n       <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb3 py-0\">\n           <div className=\"container\">\n               <a href=\"/\" className=\"navbar-brand\">\n                  { branding }\n               </a>\n               <div>\n                   <ul className=\"navbar-nav mr-auto\">\n                       <li className=\"nav-item nav-link active\">\n                           <Link to=\"/\" className=\"nav-link\"> <i className=\"fas fa-home\"></i> Home</Link>\n                       </li>\n                       <li className=\"nav-item nav-link active\">\n                           <Link to=\"/contacts/add\" className=\"nav-link\"> <i className=\"fas fa-plus\"></i> Add Contact</Link>\n                       </li>\n                       <li className=\"nav-item nav-link active\">\n                           <Link to=\"/about\" className=\"nav-link\"> <i className=\"fas fa-info\"></i> About</Link>\n                       </li>\n                   </ul>\n               </div>\n           </div>\n       </nav>\n    )\n}\n\nexport default Header;\n","import React, { Component } from 'react'\nimport uuid from 'uuid';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action)=>{\n    switch(action.type){\n        case 'DELETE_CONTACT':\n            return{\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            };\n\n        case 'ADD_CONTACT':\n            return{\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return{\n                ...state,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id? (contact = action.payload) : contact)\n            }\n\n        default:\n            return state;\n          \n    }\n}\n\nexport class Provider extends Component {\n\n\n    state = {\n        contacts:[\n            \n        ],\n        \n        dispatch: action => this.setState(state => reducer(state, action)),\n\n    };\n\n   async componentDidMount(){\n     const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n     this.setState({ contacts: res.data});\n    }\n\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react'\nimport { Consumer } from '../../context';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Contact extends Component {\n\n    state = {\n        showInfo: false\n    }\n\n    handleClick = (e) =>{\n        this.setState({\n            showInfo: !this.state.showInfo\n        });            \n    }\n\n   handleDelete = async (id, dispatch)=>{\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n        dispatch({\n                type: 'DELETE_CONTACT',\n                payload: id,\n            })\n    }\n\n    render(){\n\n    const { name, email, phone, id } = this.props.contacts;\n    const { showInfo } = this.state;\n\n\n    return (\n\n        <Consumer>\n            {value =>{\n\n                const { dispatch } = value\n                return(\n\n                    <div className=\"card card-body mb-3 my-3\">\n                        <h4>Name: { name } <i onClick={this.handleClick } className=\"fas fa-sort-down\" style={{ cursor: 'pointer'}}></i>\n                        <i className=\"fas fa-times\" onClick={() => this.handleDelete(id,dispatch)} style={{cursor: 'pointer', color: 'red', float: 'right'}}></i>\n                        <Link to={`contacts/edit/${id}`}>\n                            <i className=\"fas fa-pencil-alt\" style={{cursor: 'pointer', color: 'black', float: 'right', marginRight:'1rem'}}></i>\n                        </Link>\n                        </h4>\n                        {\n                            showInfo && <ul className=\"list-group\">\n                            <li className=\"list-group-item\">Email: { email }</li>\n                            <li className=\"list-group-item\">Phone: { phone }</li>\n                        </ul>\n                        }\n                    </div>\n                );\n            }}\n        </Consumer>\n    )\n}\n}\n\nexport default Contact;\n ","import React, { Component } from 'react'\nimport Contact from './Contact';\nimport { Consumer } from '../../context'\n\nclass Contacts extends Component {\n    render() {\n\n        return (\n        <Consumer>\n            {value =>{\n                const { contacts } = value;\n                return(\n                    <>\n                        <h1 className=\"display-4\"><span className=\"text-danger\">Contacts</span> List</h1>\n                        { contacts.map(contact =>(\n                        <Contact key={contact.id} contacts={contact}/>\n                        ))}\n                    </>\n                );\n            }}\n        </Consumer>\n\n        )\n    }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n\n\nfunction TextInputGroup({ label, name, value, placeholder, type, onChange, error }) {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={ name }>{ label }</label>\n            <input type={ type } name={ name } className={classnames('form-control from-control-lg', {\n                'is-invalid': error\n            })} placeholder={ placeholder } value={ value} onChange={ onChange }/>\n\n            { error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    )\n}\n\nTextInputGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n    \n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n\n\nexport default TextInputGroup;\n","import React, { Component } from 'react'\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\n\n\n\nclass AddContacts extends Component {\n\n    state = {\n       name: '',\n       email: '',\n       phone: '', \n       errors: {}\n    }\n\n\n\n    handleSubmit = async (dispatch, e) =>{\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n\n        // Check for errors\n        if(name ===''){\n            this.setState({\n                errors: { name: 'Name is required'}\n            });\n            return;\n        }\n\n        if(email ===''){\n            this.setState({\n                errors: { email: 'Email is required'}\n            });\n            return;\n        }\n\n        if(phone ===''){\n            this.setState({\n                errors: { phone: 'Email is required'}\n            });\n            return;\n        }\n\n\n        const newContact = {\n            name,\n            email,\n            phone\n        }\n        \n        const response = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\n        dispatch({\n            type: 'ADD_CONTACT',\n            payload: response.data\n        })\n        \n        //clear state\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    \n    }\n\n    onChange = e =>{\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n\n    render() {\n\n        const { name, email, phone, errors } = this.state\n\n        return (\n            <Consumer>\n                {value =>{\n                    const { dispatch } = value;\n                    return (\n                <div className=\"card my-3 mb-3\">\n                    <div className=\"card-header\">Add Contacts</div>\n                        <div className=\"card-body\">\n                            <form onSubmit={this.handleSubmit.bind(this,dispatch) }>\n                                <TextInputGroup \n                                    label = \"Name\"\n                                    name = \"name\"\n                                    placeholder = \"Enter Your Name\"\n                                    value = { name }\n                                    onChange = { this.onChange }\n                                    error={ errors.name}\n                                />\n                                <TextInputGroup \n                                    label = \"Email\"\n                                    name = \"email\"\n                                    type=\"email\"\n                                    placeholder = \"Enter Your Email\"\n                                    value = { email }\n                                    onChange = { this.onChange }\n                                    error={ errors.email}\n                                />\n\n                                <TextInputGroup \n                                    label = \"Phone\"\n                                    name = \"phone\"\n                                    placeholder = \"Enter Your phone number\"\n                                    value = { phone }\n                                    onChange = { this.onChange }\n                                    error={ errors.phone}\n                                />\n                                \n                                <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-primary btn-block\"/>\n                            </form>\n                        </div>\n            </div>\n            )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default AddContacts;\n","import React, { Component } from 'react'\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\n\n\n\nclass EditContacts extends Component {\n\n    state = {\n       name: '',\n       email: '',\n       phone: '', \n       errors: {}\n    }\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        const contact = res.data;\n        const { name, email, phone } = contact;\n        \n        this.setState({\n           name,\n            email,\n            phone\n        })\n\n    }\n\n\n    handleSubmit = async (dispatch, e) =>{\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n\n        // Check for errors\n        if(name ===''){\n            this.setState({\n                errors: { name: 'Name is required'}\n            });\n            return;\n        }\n\n        if(email ===''){\n            this.setState({\n                errors: { email: 'Email is required'}\n            });\n            return;\n        }\n\n        if(phone ===''){\n            this.setState({\n                errors: { phone: 'Email is required'}\n            });\n            return;\n        }\n\n\n        const updateContact = {\n            name,\n            email,\n            phone\n        }\n\n        const { id } = this.props.match.params;\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n\n\n\n        //clear state\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    \n    }\n\n    onChange = e =>{\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n\n    render() {\n\n        const { name, email, phone, errors } = this.state\n\n        return (\n            <Consumer>\n                {value =>{\n                    const { dispatch } = value;\n                    return (\n                <div className=\"card my-3 mb-3\">\n                    <div className=\"card-header\">Edit Contacts</div>\n                        <div className=\"card-body\">\n                            <form onSubmit={this.handleSubmit.bind(this,dispatch) }>\n                                <TextInputGroup \n                                    label = \"Name\"\n                                    name = \"name\"\n                                    placeholder = \"Enter Your Name\"\n                                    value = { name }\n                                    onChange = { this.onChange }\n                                    error={ errors.name}\n                                />\n                                <TextInputGroup \n                                    label = \"Email\"\n                                    name = \"email\"\n                                    type=\"email\"\n                                    placeholder = \"Enter Your Email\"\n                                    value = { email }\n                                    onChange = { this.onChange }\n                                    error={ errors.email}\n                                />\n\n                                <TextInputGroup \n                                    label = \"Phone\"\n                                    name = \"phone\"\n                                    placeholder = \"Enter Your phone number\"\n                                    value = { phone }\n                                    onChange = { this.onChange }\n                                    error={ errors.phone}\n                                />\n                                \n                                <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-info btn-block\"/>\n                            </form>\n                        </div>\n            </div>\n            )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default EditContacts;\n","import React from 'react'\n\nexport default props => {\n    return (\n        <div className=\"\">\n            <h1 className=\"display-4\">About contact manager</h1>\n            <p className=\"lead\">Simple contact manager</p>\n            <p className=\"text-seconadary\">Version 1.0.0.1</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default function NotFound() {\n    return (\n        <div>\n            <h1 className=\"display-4\"><span className=\"text-danger\">404 </span>Page Not Found</h1>\n            <p>Sorry, page not found</p>\n            <p>Go back to home page<Link to=\"/\"><span className=\"lead\">  HOME</span></Link></p>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Contacts from './components/contacts/Contacts';\nimport { Provider } from './context';\nimport AddContacts from './components/contacts/AddContacts';\nimport EditContacts from './components/contacts/EditContacts';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\n\n\n\n\nclass App extends Component{\n\n  render(){\n    return (\n      <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n          <Switch>\n              <Route exact path='/' component={ Contacts } />\n              <Route exact path='/contacts/add' component={ AddContacts} />\n              <Route exact path='/contacts/edit/:id' component={ EditContacts } />\n              <Route exact path='/about' component={ About } />\n              <Route component={ NotFound } />\n          </Switch>\n        </div>\n        </div>\n        </Router>\n      </Provider>\n    );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}